{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockId","undefined","time","Date","tempClockId","window","setInterval","setState","console","info","toUTCString","slice","this","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAGaA,EAAb,4MACEC,MAAQ,CACNC,aAASC,EACTC,KAAM,IAAIC,MAHd,uDAME,WAA2B,IAAD,OAClBC,EAAcC,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,KAAK,EAAKV,MAAMG,KAAKQ,cAAcC,OAAO,IAAK,MACtD,KAEHC,KAAKL,SAAS,CAAEP,QAASI,MAd7B,gCAiBE,SAAmBS,GACbA,EAAUC,YAAcF,KAAKG,MAAMD,WAErCN,QAAQQ,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDF,KAAKG,MAAMD,cApBzE,kCAwBE,WACET,OAAOY,cAAcL,KAAKb,MAAMC,WAzBpC,oBA4BE,WACE,IAAQc,EAAcF,KAAKG,MAAnBD,UACAZ,EAASU,KAAKb,MAAdG,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKQ,cAAcC,OAAO,IAAK,YAzC1C,GAA2BQ,aCE3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVX,UAAW,WAHf,uDAME,WAA2B,IAAD,OACxBT,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEO,UAAWM,QAC1B,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CAAEkB,UAAU,SAjBhC,oBAqBE,WACE,MAAgCb,KAAKb,MAA7B0B,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAEEO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WA5BxC,GAAyBK,aCRzBW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.853629de.chunk.js","sourcesContent":["import { Component } from 'react'; // react component\nimport { ClockState, ClockProps } from './ClockTypes'; // types\n\nexport class Clock extends Component<ClockProps, ClockState> {\n  state = {\n    clockId: undefined,\n    time: new Date(),\n  };\n\n  componentDidMount(): void {\n    const tempClockId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.setState({ clockId: tempClockId });\n  }\n\n  componentDidUpdate(prevProps: ClockProps): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.state.clockId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react'; // react component\nimport './App.scss'; // styles\nimport { AppProps, AppState } from './AppTypes'; // types\nimport { Clock } from './Clock'; // clock component\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<AppProps, AppState> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {\n          hasClock && <Clock clockName={clockName} />\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}